plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

archivesBaseName += "-quilt"

repositories {
    maven { url "https://maven.quiltmc.org/repository/release/" }

    maven { url "https://maven.shedaniel.me/" }

    maven {
        name = 'TerraformersMC'
        url = 'https://maven.terraformersmc.com/releases'
    }
}

architectury {
    platformSetupLoomIde()
    loader("quilt")
}

loom {
//    accessWidenerPath = project(":common").loom.accessWidenerPath
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentQuilt.extendsFrom common
}

dependencies {
    modImplementation "org.quiltmc:quilt-loader:${rootProject.quilt_loader_version}"

    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${rootProject.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
        exclude(module: "fabric-loader")
    }
    modImplementation("com.terraformersmc:modmenu:${rootProject.modmenu_version}") {
        exclude(group: "net.fabricmc.fabric-api")
        exclude(module: "fabric-loader")
    }

//    modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${rootProject.quilted_fabric_api_version}-${minecraft_version}"
//    modImplementation "org.quiltmc:qsl:${rootProject.qsl_version}+${rootProject.minecraft_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionQuilt")) { transitive false }
}

processResources {
    inputs.property "group", rootProject.maven_group
    inputs.property "version", rootProject.mod_version

    filesMatching("quilt.mod.json") {
        expand "group": rootProject.maven_group,
                "version": rootProject.mod_version
    }
}

shadowJar {
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    injectAccessWidener = true
    inputFile.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenQuilt(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
